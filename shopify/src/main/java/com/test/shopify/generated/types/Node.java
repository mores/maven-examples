package com.test.shopify.generated.types;

import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import java.lang.String;

/**
 * An object with an ID field to support global identification, in accordance with the
 * [Relay specification](https://relay.dev/graphql/objectidentification.htm#sec-Node-Interface).
 * This interface is used by the [node](https://shopify.dev/api/admin-graphql/unstable/queries/node)
 * and [nodes](https://shopify.dev/api/admin-graphql/unstable/queries/nodes) queries.
 */
@JsonTypeInfo(
    use = JsonTypeInfo.Id.NAME,
    include = JsonTypeInfo.As.PROPERTY,
    property = "__typename"
)
@JsonSubTypes({
    @JsonSubTypes.Type(value = AbandonedCheckout.class, name = "AbandonedCheckout"),
    @JsonSubTypes.Type(value = AbandonedCheckoutLineItem.class, name = "AbandonedCheckoutLineItem"),
    @JsonSubTypes.Type(value = Abandonment.class, name = "Abandonment"),
    @JsonSubTypes.Type(value = AddAllProductsOperation.class, name = "AddAllProductsOperation"),
    @JsonSubTypes.Type(value = AdditionalFee.class, name = "AdditionalFee"),
    @JsonSubTypes.Type(value = App.class, name = "App"),
    @JsonSubTypes.Type(value = AppCatalog.class, name = "AppCatalog"),
    @JsonSubTypes.Type(value = AppCredit.class, name = "AppCredit"),
    @JsonSubTypes.Type(value = AppInstallation.class, name = "AppInstallation"),
    @JsonSubTypes.Type(value = AppPurchaseOneTime.class, name = "AppPurchaseOneTime"),
    @JsonSubTypes.Type(value = AppRevenueAttributionRecord.class, name = "AppRevenueAttributionRecord"),
    @JsonSubTypes.Type(value = AppSubscription.class, name = "AppSubscription"),
    @JsonSubTypes.Type(value = AppUsageRecord.class, name = "AppUsageRecord"),
    @JsonSubTypes.Type(value = Article.class, name = "Article"),
    @JsonSubTypes.Type(value = BasicEvent.class, name = "BasicEvent"),
    @JsonSubTypes.Type(value = Blog.class, name = "Blog"),
    @JsonSubTypes.Type(value = BulkOperation.class, name = "BulkOperation"),
    @JsonSubTypes.Type(value = BusinessEntity.class, name = "BusinessEntity"),
    @JsonSubTypes.Type(value = CalculatedOrder.class, name = "CalculatedOrder"),
    @JsonSubTypes.Type(value = CartTransform.class, name = "CartTransform"),
    @JsonSubTypes.Type(value = CashTrackingAdjustment.class, name = "CashTrackingAdjustment"),
    @JsonSubTypes.Type(value = CashTrackingSession.class, name = "CashTrackingSession"),
    @JsonSubTypes.Type(value = CatalogCsvOperation.class, name = "CatalogCsvOperation"),
    @JsonSubTypes.Type(value = Channel.class, name = "Channel"),
    @JsonSubTypes.Type(value = ChannelDefinition.class, name = "ChannelDefinition"),
    @JsonSubTypes.Type(value = ChannelInformation.class, name = "ChannelInformation"),
    @JsonSubTypes.Type(value = CheckoutProfile.class, name = "CheckoutProfile"),
    @JsonSubTypes.Type(value = Collection.class, name = "Collection"),
    @JsonSubTypes.Type(value = Comment.class, name = "Comment"),
    @JsonSubTypes.Type(value = CommentEvent.class, name = "CommentEvent"),
    @JsonSubTypes.Type(value = Company.class, name = "Company"),
    @JsonSubTypes.Type(value = CompanyAddress.class, name = "CompanyAddress"),
    @JsonSubTypes.Type(value = CompanyContact.class, name = "CompanyContact"),
    @JsonSubTypes.Type(value = CompanyContactRole.class, name = "CompanyContactRole"),
    @JsonSubTypes.Type(value = CompanyContactRoleAssignment.class, name = "CompanyContactRoleAssignment"),
    @JsonSubTypes.Type(value = CompanyLocation.class, name = "CompanyLocation"),
    @JsonSubTypes.Type(value = CompanyLocationCatalog.class, name = "CompanyLocationCatalog"),
    @JsonSubTypes.Type(value = CompanyLocationStaffMemberAssignment.class, name = "CompanyLocationStaffMemberAssignment"),
    @JsonSubTypes.Type(value = Customer.class, name = "Customer"),
    @JsonSubTypes.Type(value = CustomerAccountAppExtensionPage.class, name = "CustomerAccountAppExtensionPage"),
    @JsonSubTypes.Type(value = CustomerAccountNativePage.class, name = "CustomerAccountNativePage"),
    @JsonSubTypes.Type(value = CustomerPaymentMethod.class, name = "CustomerPaymentMethod"),
    @JsonSubTypes.Type(value = CustomerSegmentMembersQuery.class, name = "CustomerSegmentMembersQuery"),
    @JsonSubTypes.Type(value = CustomerVisit.class, name = "CustomerVisit"),
    @JsonSubTypes.Type(value = DeliveryCarrierService.class, name = "DeliveryCarrierService"),
    @JsonSubTypes.Type(value = DeliveryCondition.class, name = "DeliveryCondition"),
    @JsonSubTypes.Type(value = DeliveryCountry.class, name = "DeliveryCountry"),
    @JsonSubTypes.Type(value = DeliveryCustomization.class, name = "DeliveryCustomization"),
    @JsonSubTypes.Type(value = DeliveryLocationGroup.class, name = "DeliveryLocationGroup"),
    @JsonSubTypes.Type(value = DeliveryMethod.class, name = "DeliveryMethod"),
    @JsonSubTypes.Type(value = DeliveryMethodDefinition.class, name = "DeliveryMethodDefinition"),
    @JsonSubTypes.Type(value = DeliveryParticipant.class, name = "DeliveryParticipant"),
    @JsonSubTypes.Type(value = DeliveryProfile.class, name = "DeliveryProfile"),
    @JsonSubTypes.Type(value = DeliveryProfileItem.class, name = "DeliveryProfileItem"),
    @JsonSubTypes.Type(value = DeliveryPromiseProvider.class, name = "DeliveryPromiseProvider"),
    @JsonSubTypes.Type(value = DeliveryProvince.class, name = "DeliveryProvince"),
    @JsonSubTypes.Type(value = DeliveryRateDefinition.class, name = "DeliveryRateDefinition"),
    @JsonSubTypes.Type(value = DeliveryZone.class, name = "DeliveryZone"),
    @JsonSubTypes.Type(value = DiscountAutomaticBxgy.class, name = "DiscountAutomaticBxgy"),
    @JsonSubTypes.Type(value = DiscountAutomaticNode.class, name = "DiscountAutomaticNode"),
    @JsonSubTypes.Type(value = DiscountCodeNode.class, name = "DiscountCodeNode"),
    @JsonSubTypes.Type(value = DiscountNode.class, name = "DiscountNode"),
    @JsonSubTypes.Type(value = DiscountRedeemCodeBulkCreation.class, name = "DiscountRedeemCodeBulkCreation"),
    @JsonSubTypes.Type(value = Domain.class, name = "Domain"),
    @JsonSubTypes.Type(value = DraftOrder.class, name = "DraftOrder"),
    @JsonSubTypes.Type(value = DraftOrderLineItem.class, name = "DraftOrderLineItem"),
    @JsonSubTypes.Type(value = DraftOrderTag.class, name = "DraftOrderTag"),
    @JsonSubTypes.Type(value = Duty.class, name = "Duty"),
    @JsonSubTypes.Type(value = ExchangeLineItem.class, name = "ExchangeLineItem"),
    @JsonSubTypes.Type(value = ExchangeV2.class, name = "ExchangeV2"),
    @JsonSubTypes.Type(value = ExternalVideo.class, name = "ExternalVideo"),
    @JsonSubTypes.Type(value = Fulfillment.class, name = "Fulfillment"),
    @JsonSubTypes.Type(value = FulfillmentConstraintRule.class, name = "FulfillmentConstraintRule"),
    @JsonSubTypes.Type(value = FulfillmentEvent.class, name = "FulfillmentEvent"),
    @JsonSubTypes.Type(value = FulfillmentHold.class, name = "FulfillmentHold"),
    @JsonSubTypes.Type(value = FulfillmentLineItem.class, name = "FulfillmentLineItem"),
    @JsonSubTypes.Type(value = FulfillmentOrder.class, name = "FulfillmentOrder"),
    @JsonSubTypes.Type(value = FulfillmentOrderDestination.class, name = "FulfillmentOrderDestination"),
    @JsonSubTypes.Type(value = FulfillmentOrderLineItem.class, name = "FulfillmentOrderLineItem"),
    @JsonSubTypes.Type(value = FulfillmentOrderMerchantRequest.class, name = "FulfillmentOrderMerchantRequest"),
    @JsonSubTypes.Type(value = GenericFile.class, name = "GenericFile"),
    @JsonSubTypes.Type(value = GiftCard.class, name = "GiftCard"),
    @JsonSubTypes.Type(value = GiftCardCreditTransaction.class, name = "GiftCardCreditTransaction"),
    @JsonSubTypes.Type(value = GiftCardDebitTransaction.class, name = "GiftCardDebitTransaction"),
    @JsonSubTypes.Type(value = InventoryAdjustmentGroup.class, name = "InventoryAdjustmentGroup"),
    @JsonSubTypes.Type(value = InventoryItem.class, name = "InventoryItem"),
    @JsonSubTypes.Type(value = InventoryItemMeasurement.class, name = "InventoryItemMeasurement"),
    @JsonSubTypes.Type(value = InventoryLevel.class, name = "InventoryLevel"),
    @JsonSubTypes.Type(value = InventoryQuantity.class, name = "InventoryQuantity"),
    @JsonSubTypes.Type(value = LineItem.class, name = "LineItem"),
    @JsonSubTypes.Type(value = LineItemGroup.class, name = "LineItemGroup"),
    @JsonSubTypes.Type(value = Location.class, name = "Location"),
    @JsonSubTypes.Type(value = MailingAddress.class, name = "MailingAddress"),
    @JsonSubTypes.Type(value = Market.class, name = "Market"),
    @JsonSubTypes.Type(value = MarketCatalog.class, name = "MarketCatalog"),
    @JsonSubTypes.Type(value = MarketingActivity.class, name = "MarketingActivity"),
    @JsonSubTypes.Type(value = MarketingEvent.class, name = "MarketingEvent"),
    @JsonSubTypes.Type(value = MarketRegionCountry.class, name = "MarketRegionCountry"),
    @JsonSubTypes.Type(value = MarketWebPresence.class, name = "MarketWebPresence"),
    @JsonSubTypes.Type(value = MediaImage.class, name = "MediaImage"),
    @JsonSubTypes.Type(value = Menu.class, name = "Menu"),
    @JsonSubTypes.Type(value = Metafield.class, name = "Metafield"),
    @JsonSubTypes.Type(value = MetafieldDefinition.class, name = "MetafieldDefinition"),
    @JsonSubTypes.Type(value = MetafieldStorefrontVisibility.class, name = "MetafieldStorefrontVisibility"),
    @JsonSubTypes.Type(value = Metaobject.class, name = "Metaobject"),
    @JsonSubTypes.Type(value = MetaobjectDefinition.class, name = "MetaobjectDefinition"),
    @JsonSubTypes.Type(value = Model3d.class, name = "Model3d"),
    @JsonSubTypes.Type(value = OnlineStoreTheme.class, name = "OnlineStoreTheme"),
    @JsonSubTypes.Type(value = Order.class, name = "Order"),
    @JsonSubTypes.Type(value = OrderAdjustment.class, name = "OrderAdjustment"),
    @JsonSubTypes.Type(value = OrderDisputeSummary.class, name = "OrderDisputeSummary"),
    @JsonSubTypes.Type(value = OrderTransaction.class, name = "OrderTransaction"),
    @JsonSubTypes.Type(value = Page.class, name = "Page"),
    @JsonSubTypes.Type(value = PaymentCustomization.class, name = "PaymentCustomization"),
    @JsonSubTypes.Type(value = PaymentMandate.class, name = "PaymentMandate"),
    @JsonSubTypes.Type(value = PaymentSchedule.class, name = "PaymentSchedule"),
    @JsonSubTypes.Type(value = PaymentTerms.class, name = "PaymentTerms"),
    @JsonSubTypes.Type(value = PaymentTermsTemplate.class, name = "PaymentTermsTemplate"),
    @JsonSubTypes.Type(value = PriceList.class, name = "PriceList"),
    @JsonSubTypes.Type(value = PriceRule.class, name = "PriceRule"),
    @JsonSubTypes.Type(value = PriceRuleDiscountCode.class, name = "PriceRuleDiscountCode"),
    @JsonSubTypes.Type(value = PrivateMetafield.class, name = "PrivateMetafield"),
    @JsonSubTypes.Type(value = Product.class, name = "Product"),
    @JsonSubTypes.Type(value = ProductBundleOperation.class, name = "ProductBundleOperation"),
    @JsonSubTypes.Type(value = ProductDeleteOperation.class, name = "ProductDeleteOperation"),
    @JsonSubTypes.Type(value = ProductDuplicateOperation.class, name = "ProductDuplicateOperation"),
    @JsonSubTypes.Type(value = ProductFeed.class, name = "ProductFeed"),
    @JsonSubTypes.Type(value = ProductOption.class, name = "ProductOption"),
    @JsonSubTypes.Type(value = ProductOptionValue.class, name = "ProductOptionValue"),
    @JsonSubTypes.Type(value = ProductSetOperation.class, name = "ProductSetOperation"),
    @JsonSubTypes.Type(value = ProductTaxonomyNode.class, name = "ProductTaxonomyNode"),
    @JsonSubTypes.Type(value = ProductVariant.class, name = "ProductVariant"),
    @JsonSubTypes.Type(value = ProductVariantComponent.class, name = "ProductVariantComponent"),
    @JsonSubTypes.Type(value = Publication.class, name = "Publication"),
    @JsonSubTypes.Type(value = PublicationResourceOperation.class, name = "PublicationResourceOperation"),
    @JsonSubTypes.Type(value = QuantityPriceBreak.class, name = "QuantityPriceBreak"),
    @JsonSubTypes.Type(value = Refund.class, name = "Refund"),
    @JsonSubTypes.Type(value = RefundShippingLine.class, name = "RefundShippingLine"),
    @JsonSubTypes.Type(value = Return.class, name = "Return"),
    @JsonSubTypes.Type(value = ReturnableFulfillment.class, name = "ReturnableFulfillment"),
    @JsonSubTypes.Type(value = ReturnLineItem.class, name = "ReturnLineItem"),
    @JsonSubTypes.Type(value = ReverseDelivery.class, name = "ReverseDelivery"),
    @JsonSubTypes.Type(value = ReverseDeliveryLineItem.class, name = "ReverseDeliveryLineItem"),
    @JsonSubTypes.Type(value = ReverseFulfillmentOrder.class, name = "ReverseFulfillmentOrder"),
    @JsonSubTypes.Type(value = ReverseFulfillmentOrderDisposition.class, name = "ReverseFulfillmentOrderDisposition"),
    @JsonSubTypes.Type(value = ReverseFulfillmentOrderLineItem.class, name = "ReverseFulfillmentOrderLineItem"),
    @JsonSubTypes.Type(value = SaleAdditionalFee.class, name = "SaleAdditionalFee"),
    @JsonSubTypes.Type(value = SavedSearch.class, name = "SavedSearch"),
    @JsonSubTypes.Type(value = ScriptTag.class, name = "ScriptTag"),
    @JsonSubTypes.Type(value = Segment.class, name = "Segment"),
    @JsonSubTypes.Type(value = SellingPlan.class, name = "SellingPlan"),
    @JsonSubTypes.Type(value = SellingPlanGroup.class, name = "SellingPlanGroup"),
    @JsonSubTypes.Type(value = ServerPixel.class, name = "ServerPixel"),
    @JsonSubTypes.Type(value = Shop.class, name = "Shop"),
    @JsonSubTypes.Type(value = ShopAddress.class, name = "ShopAddress"),
    @JsonSubTypes.Type(value = ShopifyPaymentsAccount.class, name = "ShopifyPaymentsAccount"),
    @JsonSubTypes.Type(value = ShopifyPaymentsBalanceTransaction.class, name = "ShopifyPaymentsBalanceTransaction"),
    @JsonSubTypes.Type(value = ShopifyPaymentsBankAccount.class, name = "ShopifyPaymentsBankAccount"),
    @JsonSubTypes.Type(value = ShopifyPaymentsDispute.class, name = "ShopifyPaymentsDispute"),
    @JsonSubTypes.Type(value = ShopifyPaymentsDisputeEvidence.class, name = "ShopifyPaymentsDisputeEvidence"),
    @JsonSubTypes.Type(value = ShopifyPaymentsDisputeFileUpload.class, name = "ShopifyPaymentsDisputeFileUpload"),
    @JsonSubTypes.Type(value = ShopifyPaymentsDisputeFulfillment.class, name = "ShopifyPaymentsDisputeFulfillment"),
    @JsonSubTypes.Type(value = ShopifyPaymentsPayout.class, name = "ShopifyPaymentsPayout"),
    @JsonSubTypes.Type(value = ShopifyPaymentsVerification.class, name = "ShopifyPaymentsVerification"),
    @JsonSubTypes.Type(value = ShopPolicy.class, name = "ShopPolicy"),
    @JsonSubTypes.Type(value = StaffMember.class, name = "StaffMember"),
    @JsonSubTypes.Type(value = StandardMetafieldDefinitionTemplate.class, name = "StandardMetafieldDefinitionTemplate"),
    @JsonSubTypes.Type(value = StoreCreditAccount.class, name = "StoreCreditAccount"),
    @JsonSubTypes.Type(value = StoreCreditAccountCreditTransaction.class, name = "StoreCreditAccountCreditTransaction"),
    @JsonSubTypes.Type(value = StoreCreditAccountDebitRevertTransaction.class, name = "StoreCreditAccountDebitRevertTransaction"),
    @JsonSubTypes.Type(value = StoreCreditAccountDebitTransaction.class, name = "StoreCreditAccountDebitTransaction"),
    @JsonSubTypes.Type(value = StorefrontAccessToken.class, name = "StorefrontAccessToken"),
    @JsonSubTypes.Type(value = SubscriptionBillingAttempt.class, name = "SubscriptionBillingAttempt"),
    @JsonSubTypes.Type(value = SubscriptionContract.class, name = "SubscriptionContract"),
    @JsonSubTypes.Type(value = SubscriptionDraft.class, name = "SubscriptionDraft"),
    @JsonSubTypes.Type(value = TaxonomyAttribute.class, name = "TaxonomyAttribute"),
    @JsonSubTypes.Type(value = TaxonomyCategory.class, name = "TaxonomyCategory"),
    @JsonSubTypes.Type(value = TaxonomyChoiceListAttribute.class, name = "TaxonomyChoiceListAttribute"),
    @JsonSubTypes.Type(value = TaxonomyMeasurementAttribute.class, name = "TaxonomyMeasurementAttribute"),
    @JsonSubTypes.Type(value = TaxonomyValue.class, name = "TaxonomyValue"),
    @JsonSubTypes.Type(value = TenderTransaction.class, name = "TenderTransaction"),
    @JsonSubTypes.Type(value = TransactionFee.class, name = "TransactionFee"),
    @JsonSubTypes.Type(value = UnverifiedReturnLineItem.class, name = "UnverifiedReturnLineItem"),
    @JsonSubTypes.Type(value = UrlRedirect.class, name = "UrlRedirect"),
    @JsonSubTypes.Type(value = UrlRedirectImport.class, name = "UrlRedirectImport"),
    @JsonSubTypes.Type(value = Validation.class, name = "Validation"),
    @JsonSubTypes.Type(value = Video.class, name = "Video"),
    @JsonSubTypes.Type(value = WebhookSubscription.class, name = "WebhookSubscription"),
    @JsonSubTypes.Type(value = WebPixel.class, name = "WebPixel")
})
public interface Node {
  /**
   * A globally-unique ID.
   */
  String getId();
}
